Alright, this works, but 
1) We may be taking waay too many time delays
2) Should attempt for non-cyclic processes too
3) TLS needs some tighter tolerances

Low rank approx
Basic BWplot saner
Fewer time delays
Non-cyclic processes













<-------------------------------------------------------------------------------------------------->

Noise free LTI seems to be working fine.
- Some underflow error --> Possibly from using 100s of time delays 
---> Confirmed with debugger: The instances I saw were all for 400 delays, and originated in cmodesvals2wts
- Minor mod to keepthemgoodelays
--> Tis no longer dependent on sequential delays

Noisy LTI:

SOO MANY annoying issues because of using a scalar observable

Flavour only matters for getcstar:
- !mspres is safe for the first part
- I say we don't filter so that the effect on damped modes can be discerned. (Set all to "ms")
- Besides the filtering idea is cool only when we have a truly finite dimensional invariant SS
- There is still no reason why cX2valswts is neglected when you can actually compute respercent and rperror

<----------------------------------------------------------------------------------------------------------------------->

Scrapbook evaluates every damned thing in all directories

To use debugger,
- Ensure that you have no directional dependencies in evaluating the .m files
- Put forge functions at the very first
- Ensure all example files appear commented out
- Add you script after that




-----------------------------------------------------------------------------------------

If we assume there is
- No user function
- No lifting the given observables

The entire process becomes simpler

- Time series and noise can dump the additional 1 column of observation

- Create the observation matrix
- Time series and noise:
----> Observe via the above
----> Delay the time series and the noise

- Update matcarve fun to work with the input matrix as an argument
- noisygetcquad
- Update the trueval business


- No updating the trueval means a greater shortening of the code !









 <------- Det and Stoch in one code ------------->
 
 - ics containing both data and noise
 - Big IF / a flavour  that separates both approaches
